{{~>subtypes name=name}}
{{~#if description~}}
/// {{description}}
{{~/if}}
{{#if type~}}
    {{~#if (eq type "object")}}
    #[derive(Deserialize, Serialize, Clone, Debug, PartialEq)]
    pub struct {{camelcase name suffix}} {
        {{~#each properties}}
            #[serde(rename = "{{snakecase @key}}")]
            {{~#if (has @key ../../required)}}
            pub {{sanitize (snakecase @key)}}: {{>data_type name=(camelcase ../name @key) required="true"}},
            {{~else}}
            #[serde(skip_serializing_if = "Option::is_none")]
            pub {{sanitize (snakecase @key)}}: {{>data_type name=(camelcase ../name @key)}},
            {{~/if}}
        {{~/each}}
        {{~#if additionalProperties}}
            pub properties: std::collections::HashMap<&str, {{camelcase name suffix "properties"}}>,
        {{~/if}}
    }
    {{~else~}}
    {{~#if (eq type "array")}}
    pub type {{camelcase name suffix}} = {{>data_type required="true"}};
    {{~else~}}
    pub type {{camelcase name suffix}} = {{>data_type required="true"}};
    {{~/if}}
    {{~/if}}
{{~else~}}
{{~#if [$ref]~}}
pub type {{camelcase name suffix}} = {{>data_type required="true"}};
{{~else~}}
#[derive(Deserialize, Serialize, Clone, Debug, PartialEq)]
pub struct {{camelcase name suffix}};
{{~/if}}
{{~/if}}
